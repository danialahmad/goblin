package com.fourninja.goblin.model.entity;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name="address"
    ,schema="public"
)
public class Address  implements java.io.Serializable {


     private Long id;
     private Country country;
     private State state;
     private String address1;
     private String address2;
     private String address3;
     private String postcode;
     private String city;
     private String createdBy;
     private Date createdAt;
     private String updatedBy;
     private Date updatedAt;
     private Boolean actFlag;
     private Set<Agent> agents = new HashSet<Agent>(0);

    public Address() {
    }

    public Address(Country country, State state, String address1, String address2, String address3, String postcode, String city, String createdBy, Date createdAt, String updatedBy, Date updatedAt, Boolean actFlag, Set<Agent> agents) {
       this.country = country;
       this.state = state;
       this.address1 = address1;
       this.address2 = address2;
       this.address3 = address3;
       this.postcode = postcode;
       this.city = city;
       this.createdBy = createdBy;
       this.createdAt = createdAt;
       this.updatedBy = updatedBy;
       this.updatedAt = updatedAt;
       this.actFlag = actFlag;
       this.agents = agents;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="country_id")
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="state_id")
    public State getState() {
        return this.state;
    }
    
    public void setState(State state) {
        this.state = state;
    }

    
    @Column(name="address_1", length=100)
    public String getAddress1() {
        return this.address1;
    }
    
    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    
    @Column(name="address_2", length=100)
    public String getAddress2() {
        return this.address2;
    }
    
    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    
    @Column(name="address_3", length=100)
    public String getAddress3() {
        return this.address3;
    }
    
    public void setAddress3(String address3) {
        this.address3 = address3;
    }

    
    @Column(name="postcode", length=5)
    public String getPostcode() {
        return this.postcode;
    }
    
    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }

    
    @Column(name="city", length=80)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="created_by", length=50)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", length=29)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    
    @Column(name="updated_by")
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", length=29)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    
    @Column(name="act_flag")
    @Type(type="yes_no")
    public Boolean getActFlag() {
        return this.actFlag;
    }
    
    public void setActFlag(Boolean actFlag) {
        this.actFlag = actFlag;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
    public Set<Agent> getAgents() {
        return this.agents;
    }
    
    public void setAgents(Set<Agent> agents) {
        this.agents = agents;
    }




}


